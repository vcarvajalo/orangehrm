{"ast":null,"code":"import { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport EntitlementSituationalModal from '@/orangehrmLeavePlugin/components/EntitlementSituationalModal';\nimport { OxdLabel } from '@ohrm/oxd';\nimport useServerValidation from '@/core/util/composable/useServerValidation';\nconst leaveTypeModel = {\n  id: '',\n  name: '',\n  situational: false\n};\nexport default {\n  components: {\n    'oxd-label': OxdLabel,\n    'entitlement-situational-modal': EntitlementSituationalModal\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-types');\n    const {\n      createUniqueValidator\n    } = useServerValidation(http);\n    const leaveTypeUniqueValidation = createUniqueValidator('LeaveType', 'name');\n    return {\n      http,\n      leaveTypeUniqueValidation\n    };\n  },\n  data() {\n    return {\n      showModal: false,\n      isLoading: false,\n      leaveType: {\n        ...leaveTypeModel\n      },\n      rules: {\n        name: [required, this.leaveTypeUniqueValidation, shouldNotExceedCharLength(50)]\n      },\n      errors: []\n    };\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        name: this.leaveType.name,\n        situational: this.leaveType.situational\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.leaveType = {\n          ...leaveTypeModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/leave/leaveTypeList');\n    },\n    onModalOpen() {\n      this.showModal = true;\n    },\n    onModalClose() {\n      this.showModal = false;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}