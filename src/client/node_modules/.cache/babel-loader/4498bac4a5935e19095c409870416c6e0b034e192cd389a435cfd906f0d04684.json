{"ast":null,"code":"import { maxFileSize, required, validFileTypes } from '@/core/util/validation/rules';\nimport useForm from '@/core/util/composable/useForm';\nimport { APIService } from '@/core/util/services/api.service';\nimport LanguageStringsImportModal from '@/orangehrmAdminPlugin/components/LanguageStringsImportModal.vue';\nimport RequiredText from '@/core/components/labels/RequiredText.vue';\nimport SubmitButton from '@/core/components/buttons/SubmitButton.vue';\nconst attachmentModel = {\n  attachment: null\n};\nexport default {\n  components: {\n    SubmitButton,\n    RequiredText,\n    'language-string-import-modal': LanguageStringsImportModal\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true\n    },\n    languageName: {\n      type: String,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/i18n/languages/${props.languageId}/import`);\n    const {\n      formRef,\n      reset\n    } = useForm();\n    return {\n      http,\n      reset,\n      formRef\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel\n      },\n      rules: {\n        attachment: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)]\n      },\n      importModalState: null\n    };\n  },\n  computed: {\n    formattedFileSize() {\n      return Math.round(this.maxFileSize / (1024 * 1024) * 100) / 100;\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.attachment\n      }).then(response => {\n        const {\n          meta\n        } = response.data;\n        this.importModalState = meta;\n      }).finally(() => {\n        this.reset();\n        this.isLoading = false;\n      });\n    },\n    onClickDownload() {\n      const downUrl = `${window.appGlobal.baseUrl}/admin/viewLanguagePackage/languageId/${this.languageId}`;\n      window.open(downUrl, '_blank');\n    },\n    onImportModalClose() {\n      this.importModalState = null;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}