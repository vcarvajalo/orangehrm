{"ast":null,"code":"import useToast from '@/core/util/composable/useToast';\nimport { APIService } from '@/core/util/services/api.service';\nimport FixLanguageStringErrorTable from '@/orangehrmAdminPlugin/components/FixLanguageStringErrorTable.vue';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { ref } from 'vue';\nimport { OxdAlert } from '@ohrm/oxd';\nexport default {\n  name: 'FixLanguageStringErrors',\n  components: {\n    'oxd-alert': OxdAlert,\n    'edit-translations': FixLanguageStringErrorTable\n  },\n  props: {\n    languageId: {\n      type: Number,\n      required: true\n    },\n    empNumber: {\n      type: Number,\n      required: true\n    },\n    languagePackage: {\n      type: String,\n      required: true\n    },\n    sourceLanguage: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      saveSuccess\n    } = useToast();\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/i18n/languages/${props.languageId}/translations/errors`);\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      response: items,\n      isLoading,\n      execQuery\n    } = usePaginate(http);\n    const itemsModified = ref(false);\n    const onReset = () => {\n      currentPage.value = 1;\n      itemsModified.value = false;\n      execQuery();\n    };\n    const checkItemsModified = () => {\n      itemsModified.value = items.value.data.reduce((accumulator, item) => accumulator || item.target !== '' && item.modified === true, false);\n    };\n    const onSubmitLangString = () => {\n      isLoading.value = true;\n      http.request({\n        method: `PUT`,\n        url: `/api/v2/admin/i18n/languages/${props.languageId}/translations/bulk`,\n        data: {\n          data: items.value.data.filter(item => item.target !== null && item.modified === true).map(item => {\n            return {\n              langStringId: item.langStringId,\n              translatedValue: item.target\n            };\n          })\n        }\n      }).then(() => {\n        return saveSuccess();\n      }).then(() => {\n        currentPage.value = 1;\n        itemsModified.value = false;\n        execQuery();\n      });\n    };\n    return {\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      items,\n      onReset,\n      onSubmitLangString,\n      itemsModified,\n      checkItemsModified\n    };\n  },\n  watch: {\n    total(value) {\n      if (value === 0) {\n        navigate('/admin/languagePackage');\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}